name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@v2
      with:
        egress-policy: audit
    
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-oss.txt
        pip install bandit safety pip-audit semgrep
    
    - name: Run Bandit security scan
      run: |
        bandit -r aetherpost/ -f json -o bandit-report.json
      continue-on-error: true
    
    - name: Run Safety check
      run: |
        safety check --json --output safety-report.json
      continue-on-error: true
    
    - name: Run pip-audit
      run: |
        pip-audit --format=json --output=pip-audit-report.json
      continue-on-error: true
    
    - name: Run Semgrep security scan
      run: |
        semgrep --config=auto --json --output=semgrep-report.json aetherpost/
      continue-on-error: true
    
    - name: License compliance check
      run: |
        pip install pip-licenses
        pip-licenses --format=json --output-file=licenses.json
        # Check for incompatible licenses
        pip-licenses --format=plain --fail-on="GPL" --fail-on="AGPL"
      continue-on-error: true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json
          pip-audit-report.json
    
    - name: Comment PR with security summary
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          let comment = '## üõ°Ô∏è Security Scan Results\n\n';
          
          try {
            const bandit = JSON.parse(fs.readFileSync('bandit-report.json', 'utf8'));
            comment += `**Bandit**: ${bandit.results.length} issues found\n`;
          } catch (e) {
            comment += '**Bandit**: ‚úÖ No issues found\n';
          }
          
          try {
            const safety = JSON.parse(fs.readFileSync('safety-report.json', 'utf8'));
            comment += `**Safety**: ${safety.length} vulnerabilities found\n`;
          } catch (e) {
            comment += '**Safety**: ‚úÖ No vulnerabilities found\n';
          }
          
          try {
            const audit = JSON.parse(fs.readFileSync('pip-audit-report.json', 'utf8'));
            comment += `**Pip-audit**: ${audit.vulnerabilities ? audit.vulnerabilities.length : 0} vulnerabilities found\n`;
          } catch (e) {
            comment += '**Pip-audit**: ‚úÖ No vulnerabilities found\n';
          }
          
          comment += '\nüìã Detailed reports are available in the workflow artifacts.';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  secrets-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Run TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified